{"version":3,"sources":["11.js"],"names":[],"mappings":";;AAAA;;;;;;;;;AASA,SAAS,KAAT,CAAe,GAAf,EAAoB,IAApB,EAA0B;AACxB;AACA,MAAI,WAAW,EAAf;AACA,MAAI,IAAI,CAAR;AACA,SAAM,IAAI,IAAI,MAAd,EAAsB;AACpB,aAAS,IAAT,CAAc,IAAI,KAAJ,CAAU,CAAV,EAAa,IAAE,IAAf,CAAd;AACA,SAAK,IAAL;AACD;;AAED,SAAO,QAAP;AACD;;AAED,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAN,EAA4B,CAA5B","file":"11-compiled.js","sourcesContent":["/*Bonfire: Chunky Monkey\nWrite a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a multidimensional array.\n\nRemember to use Read-Search-Ask if you get stuck. Write your own code.\n\nHere are some helpful links:\n\nArray.push*/\n\nfunction chunk(arr, size) {\n  // Break it up.\n  var multiArr = [];\n  var n = 0;\n  while(n < arr.length) {\n    multiArr.push(arr.slice(n, n+size));\n    n += size;\n  }\n \n  return multiArr;\n}\n\nchunk([\"a\", \"b\", \"c\", \"d\"], 2);\n\n"]}