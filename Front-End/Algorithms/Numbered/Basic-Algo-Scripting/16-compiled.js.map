{"version":3,"sources":["16.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;AAcA,SAAS,KAAT,CAAe,GAAf,EAAoB,GAApB,EAAyB;AACvB;AACA,MAAI,IAAJ,CAAS,GAAT;AACA,MAAI,IAAJ,CAAS,UAAS,CAAT,EAAW,CAAX,EAAa;AAAC,WAAO,IAAE,CAAT;AAAY,GAAnC;;AAGA,SAAO,IAAI,OAAJ,CAAY,GAAZ,CAAP;AACD;;AAED;AACA,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,CAAN,EAAqB,CAArB","file":"16-compiled.js","sourcesContent":["/*Bonfire: Where do I belong\r\nReturn the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted.\r\n\r\nFor example, where([1,2,3,4], 1.5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1).\r\n\r\nLikewise, where([20,3,5], 19) should return 2 because it is less than 20 (index 2) and greater than 5 (index 1).\r\n\r\nRemember to use Read-Search-Ask if you get stuck. Write your own code.\r\n\r\nHere are some helpful links:\r\n\r\nArray.sort()*/\r\n\r\n\r\nfunction where(arr, num) {\r\n  // Find my place in this sorted array.\r\n  arr.push(num);\r\n  arr.sort(function(a,b){return a-b;});\r\n  \r\n\r\n  return arr.indexOf(num);\r\n}\r\n\r\n//where([40, 60], 50);\r\nwhere([5, 3, 20, 3], 5);\r\n"]}