{"version":3,"sources":["7.js"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;AAYA,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B;AACA,SAAO,IAAI,GAAJ,CAAQ,UAAS,CAAT,EAAY;AAAE,WAAO,KAAK,GAAL,gCAAY,CAAZ,EAAP;AAAuB,GAA7C,CAAP;AACD;;AAED,cAAc,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAD,EAAe,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAf,EAAiC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAjC,EAAmD,CAAC,IAAD,EAAO,IAAP,EAAa,GAAb,EAAkB,CAAlB,CAAnD,CAAd","file":"7-compiled.js","sourcesContent":["/*Bonfire: Return Largest Numbers in Arrays\r\nReturn an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.\r\n\r\nRemember, you can iterate through an array with a simple for loop, and access each member with array syntax arr[i] .\r\n\r\nRemember to use Read-Search-Ask if you get stuck. Write your own code.\r\n\r\nHere are some helpful links:\r\n\r\nComparison Operators*/\r\n\r\n\r\nfunction largestOfFour(arr) {\r\n  // You can do this!\r\n  return arr.map(function(x) { return Math.max(...x);});\r\n}\r\n\r\nlargestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);\r\n\r\n\r\n\r\n"]}