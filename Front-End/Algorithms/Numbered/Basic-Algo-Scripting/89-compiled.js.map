{"version":3,"sources":["89.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,WAAW,CACb;AACE,QAAM,SADR;AAEE,QAAM,CACJ,MADI,EAEJ,OAFI,EAGJ,WAHI;AAFR,CADa,EASb;AACE,QAAM,OADR;AAEE,QAAM,CACJ,KADI,EAEJ,MAFI,EAGJ,OAHI;AAFR,CATa,CAAf;;AAmBA;;AAEA,IAAI,aAAa,SAAS,CAAT,EAAY,IAAZ,CAAiB,CAAjB,CAAjB,C,CAAsC","file":"89-compiled.js","sourcesContent":["// Waypoint: Accessing Nested Arrays in JSON\r\n// As we have seen in earlier examples, JSON objects can contain both nested objects and nested arrays. Similar to accessing nested objects, Array bracket notation can be chained to access nested arrays.\r\n\r\n// Here is an example of how to access a nested array:\r\n\r\n// var ourPets = { \r\n//   \"cats\": [\r\n//     \"Meowzer\",\r\n//     \"Fluffy\",\r\n//     \"Kit-Cat\"\r\n//   ],\r\n//   \"dogs:\" [\r\n//     \"Spot\",\r\n//     \"Bowser\",\r\n//     \"Frankie\"\r\n//   ]\r\n// };\r\n// ourPets.cats[1]; // \"Fluffy\"\r\n// ourPets.dogs[0]; // \"Spot\"\r\n// Instructions\r\n// Retrieve the second tree from the variable myPlants using object dot and array bracket notation.\r\n\r\n//   Run tests (ctrl + enter)\r\n//   Reset\t  Help\t  Bug\r\n\r\n// /**\r\n//   * Your output will go here.\r\n//   * Console.log() -type statements\r\n//   * will appear in your browser's\r\n//   * DevTools JavaScript console.\r\n//   */\r\n\r\n// secondTree should equal \"pine\"\r\n// Use dot and bracket notation to access myPlants\r\n// Setup\r\nvar myPlants = [\r\n  { \r\n    type: \"flowers\",\r\n    list: [\r\n      \"rose\",\r\n      \"tulip\",\r\n      \"dandelion\"\r\n    ]\r\n  },\r\n  {\r\n    type: \"trees\",\r\n    list: [\r\n      \"fir\",\r\n      \"pine\",\r\n      \"birch\"\r\n    ]\r\n  }  \r\n];\r\n\r\n// Only change code below this line\r\n\r\nvar secondTree = myPlants[1].list[1]; // Change this line\r\n\r\n"]}