{"version":3,"sources":["90.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,IAAI,aAAa;AACb,QAAM;AACJ,WAAO,mBADH;AAEJ,YAAQ,UAFJ;AAGJ,YAAQ,CACN,aADM,EAEN,0BAFM;AAHJ,GADO;AASb,QAAM;AACJ,WAAO,MADH;AAEJ,YAAQ,QAFJ;AAGJ,YAAQ,CACN,MADM,EAEN,qBAFM;AAHJ,GATO;AAiBb,QAAM;AACJ,YAAQ,eADJ;AAEJ,YAAQ;AAFJ,GAjBO;AAqBb,QAAM;AACJ,WAAO;AADH;AArBO,CAAjB;AAyBA;AACA,IAAI,iBAAiB,KAAK,KAAL,CAAW,KAAK,SAAL,CAAe,UAAf,CAAX,CAArB;;AAEA;AACA,SAAS,MAAT,CAAgB,EAAhB,EAAoB,IAApB,EAA0B,KAA1B,EAAiC;;AAE7B,MAAG,UAAU,EAAb,EAAiB;AACf,QAAG,SAAS,QAAZ,EAAsB;AACjB,iBAAW,EAAX,EAAe,MAAhB,CAAwB,IAAxB,CAA6B,KAA7B;AACD;AACF,KAHD,MAIK;AACH,iBAAW,EAAX,EAAe,IAAf,IAAuB,KAAvB;AACD;AAEF,GATD,MAWK,IAAG,UAAU,EAAb,EAAgB;AACnB,WAAO,WAAW,EAAX,EAAe,IAAf,CAAP;AACD;;AAIH,SAAO,UAAP;AACD;;AAED;AACA,OAAO,IAAP,EAAa,QAAb,EAAuB,MAAvB;;AAIA;AACA;AACA;;AAEA,OAAO,IAAP,EAAa,QAAb,EAAuB,kBAAvB;;AAEA,QAAQ,GAAR,CAAY,UAAZ","file":"90-compiled.js","sourcesContent":["// Bonfire: Record Collection\r\n// You are given a JSON object representing (a small part of) your record collection. Each album is identified by a unique id number and has several properties. Not all albums have complete information.\r\n\r\n// Write a function which takes an id, a property (prop), and a value.\r\n\r\n// For the given id in collection:\r\n\r\n// If value is non-blank (value !== \"\"), then update or set the value for the prop.\r\n\r\n// If the prop is \"tracks\" and value is non-blank, push the value onto the end of the tracks array.\r\n\r\n// If value is blank, delete that prop.\r\n\r\n// Always return the entire collection object.\r\n\r\n//   Run tests (ctrl + enter)\r\n//   Reset\t  Help\t  Bug\r\n\r\n// /**\r\n//   * Your output will go here.\r\n//   * Console.log() -type statements\r\n//   * will appear in your browser's\r\n//   * DevTools JavaScript console.\r\n//   */\r\n\r\n// After update(5439, \"artist\", \"ABBA\"), artist should be \"ABBA\"\r\n// After update(2548, \"artist\", \"\"), artist should not be set\r\n// After update(1245, \"tracks\", \"Addicted to Love\"), tracks should have a length of 1\r\n// After update(2548, \"tracks\", \"\"), tracks should not be set\r\n// Setup\r\n\r\n\r\n// Setup\r\n// Setup\r\nvar collection = {\r\n    2548: {\r\n      album: \"Slippery When Wet\",\r\n      artist: \"Bon Jovi\",\r\n      tracks: [ \r\n        \"Let It Rock\", \r\n        \"You Give Love a Bad Name\" \r\n      ]\r\n    },\r\n    2468: {\r\n      album: \"1999\",\r\n      artist: \"Prince\",\r\n      tracks: [ \r\n        \"1999\", \r\n        \"Little Red Corvette\" \r\n      ]\r\n    },\r\n    1245: {\r\n      artist: \"Robert Palmer\",\r\n      tracks: [ ]\r\n    },\r\n    5439: {\r\n      album: \"ABBA Gold\"\r\n    }\r\n};\r\n// Keep a copy of the collection for tests\r\nvar collectionCopy = JSON.parse(JSON.stringify(collection));\r\n\r\n// Only change code below this line\r\nfunction update(id, prop, value) {\r\n  \r\n    if(value !== \"\") {\r\n      if(prop === \"tracks\") {\r\n          (collection[id].tracks).push(value);\r\n         //collection[id][prop].push(value);\r\n      }\r\n      else {\r\n        collection[id][prop] = value;\r\n      }\r\n      \r\n    }\r\n    \r\n    else if(value === \"\"){\r\n      delete collection[id][prop];\r\n    }\r\n    \r\n  \r\n\r\n  return collection;\r\n}\r\n\r\n// Alter values below to test your code\r\nupdate(5439, \"artist\", \"ABBA\");\r\n\r\n\r\n\r\n//console.log(collection);\r\n// Alter values below to test your code\r\n//update(5439, \"artist\", \"ABBA\");\r\n\r\nupdate(1245, \"tracks\", \"Addicted to Love\");\r\n\r\nconsole.log(collection);\r\n\r\n"]}