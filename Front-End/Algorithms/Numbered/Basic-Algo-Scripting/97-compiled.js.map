{"version":3,"sources":["97.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,KAAT,CAAe,UAAf,EAA2B;AACzB,MAAI,UAAU,WAAW,KAAX,CAAiB,EAAjB,CAAd,CADyB,CACY;AACrC,MAAI,aAAa,EAAjB,CAFyB,CAEJ;AACrB;AACA,UAAQ,GAAR,CAAY,OAAZ;;AAEA,MAAI,KAAK,OAAT;;AAEA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,QAAQ,MAA3B,EAAmC,GAAnC,EAAwC;AACtC,QAAG,GAAG,IAAH,CAAQ,QAAQ,CAAR,CAAR,CAAH,EAAwB;AACtB,UAAI,MAAM,QAAQ,CAAR,EAAW,UAAX,CAAsB,CAAtB,CAAV;AACA,UAAI,SAAS,CAAb;AACA,UAAG,OAAO,EAAP,IAAa,OAAO,EAAvB,EAA2B;AAC1B,iBAAS,MAAM,EAAf;AACA,OAFD,MAIK,IAAG,OAAO,EAAP,IAAa,OAAO,EAAvB,EAA2B;AAC/B,iBAAS,MAAM,EAAf;AACA;;AAED,iBAAW,IAAX,CAAgB,OAAO,YAAP,CAAoB,MAApB,EAA4B,WAA5B,EAAhB;AACD,KAZD,MAaK;AACJ,cAAQ,GAAR,CAAY,cAAZ;AACC,iBAAW,IAAX,CAAgB,QAAQ,CAAR,CAAhB;AACD;AACF;;AAGD;AACA,SAAO,WAAW,IAAX,CAAgB,EAAhB,CAAP,CA9ByB,CA8BG;AAC7B;;AAED;AACA,QAAQ,GAAR,CAAY,MAAM,gBAAN,CAAZ","file":"97-compiled.js","sourcesContent":["// Bonfire: Caesars Cipher\r\n// One of the simplest and most widely known ciphers is a Caesar cipher, also known as a shift cipher. In a shift cipher the meanings of the letters are shifted by some set amount.\r\n\r\n// A common modern use is the ROT13 cipher, where the values of the letters are shifted by 13 places. Thus 'A' ↔ 'N', 'B' ↔ 'O' and so on.\r\n\r\n// Write a function which takes a ROT13 encoded string as input and returns a decoded string. All letters will be uppercase. Do not transform any non-alphabetic character (i.e. spaces, punctuation), but do pass them on.\r\n\r\n// The provided code transforms the input into an array for you, codeArr. Place the decoded values into the decodedArr array where the provided code will transform it back into a string.\r\n\r\n//   Run tests (ctrl + enter)\r\n//   Reset\t  Help\t  Bug\r\n\r\n// /**\r\n//   * Your output will go here.\r\n//   * Console.log() -type statements\r\n//   * will appear in your browser's\r\n//   * DevTools JavaScript console.\r\n//   */\r\n\r\n// rot13(\"SERR PBQR PNZC\") should decode to \"FREE CODE CAMP\"\r\n// rot13(\"SERR CVMMN!\") should decode to \"FREE PIZZA!\"\r\n// rot13(\"SERR YBIR?\") should decode to \"FREE LOVE?\"\r\n// rot13(\"GUR DHVPX OEBJA QBT WHZCRQ BIRE GUR YNML SBK.\") should decode to \"THE QUICK BROWN DOG JUMPED OVER THE LAZY FOX.\"\r\nfunction rot13(encodedStr) {\r\n  var codeArr = encodedStr.split(\"\");  // String to Array\r\n  var decodedArr = []; // Your Result goes here\r\n  // Only change code below this line\r\n  console.log(codeArr);\r\n\r\n  var re = /[A-Z]/;\r\n\r\n  for(var i = 0; i < codeArr.length; i++) {\r\n    if(re.test(codeArr[i])) {\r\n      var pos = codeArr[i].charCodeAt(0);\r\n      var newPos = 0;\r\n      if(pos >= 65 && pos <= 77) {\r\n      \tnewPos = pos + 13;\r\n      }\r\n\r\n      else if(pos >= 78 && pos <= 90) {\r\n      \tnewPos = pos - 13;\r\n      }\r\n     \r\n      decodedArr.push(String.fromCharCode(newPos).toUpperCase());\r\n    }\r\n    else {\r\n    \tconsole.log(\"entering !RE\")\r\n      decodedArr.push(codeArr[i]);\r\n    }\r\n  }\r\n\r\n\r\n  // Only change code above this line\r\n  return decodedArr.join(\"\"); // Array to String\r\n}\r\n\r\n// Change the inputs below to test\r\nconsole.log(rot13(\"SERR PBQR PNZC\"));\r\n"]}