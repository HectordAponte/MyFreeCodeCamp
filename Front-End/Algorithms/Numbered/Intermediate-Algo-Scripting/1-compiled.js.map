{"version":3,"sources":["1.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACnB,MAAI,OAAJ;AAAA,MAAY,SAAO,CAAnB;AACA,MAAG,IAAI,CAAJ,IAAS,IAAI,CAAJ,CAAZ,EAAoB;AAClB,aAAS,IAAI,CAAJ,CAAT;AACA,cAAU,IAAI,CAAJ,CAAV;AACD,GAHD,MAIK;AACH,aAAS,IAAI,CAAJ,CAAT;AACA,cAAU,IAAI,CAAJ,CAAV;AACD;AACD,MAAI,MAAM,CAAV;;AAEA,OAAI,IAAI,IAAI,MAAZ,EAAoB,KAAK,OAAzB,EAAkC,GAAlC,EAAuC;AACrC,WAAO,CAAP;AACD;;AAGD,SAAO,GAAP;AACD;;AAED,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP","file":"1-compiled.js","sourcesContent":["/*Bonfire: Sum All Numbers in a Range\r\nWe'll pass you an array of two numbers. Return the sum of those two numbers and all numbers between them.\r\n\r\nThe lowest number will not always come first.\r\n\r\nRemember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\r\n\r\nHere are some helpful links:\r\n\r\nMath.max()\r\nMath.min()\r\nArray.reduce()\r\n  Run tests (ctrl + enter)\r\n  Reset\t  Help\t  Bug\r\n\r\n10\r\n\r\nsumAll([1, 4]) should return a number.\r\nsumAll([1, 4]) should return 10.\r\nsumAll([4, 1]) should return 10.\r\nsumAll([5, 10]) should return 45.\r\nsumAll([10, 5]) should return 45.*/\r\n\r\n\r\nfunction sumAll(arr) {\r\n  var highest,lowest=0;\r\n  if(arr[0] < arr[1]) {\r\n    lowest = arr[0];\r\n    highest = arr[1];\r\n  }\r\n  else {\r\n    lowest = arr[1];\r\n    highest = arr[0];\r\n  }\r\n  var sum = 0;\r\n  \r\n  for(var i = lowest; i <= highest; i++) {\r\n    sum += i;\r\n  }\r\n\r\n\r\n  return sum;\r\n}\r\n\r\nsumAll([1, 4]);"]}