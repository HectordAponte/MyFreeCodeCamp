{"version":3,"sources":["13.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAIA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACrB,QAAI,aAAa,CAAjB;AACG,QAAI,aAAa,CAAjB;AACA,QAAI,SAAS,CAAb;AACA,WAAO,cAAc,GAArB,EAA0B;AACtB,YAAI,aAAa,CAAb,KAAmB,CAAvB,EAA0B;AACtB,sBAAU,UAAV;AACH;;AAED,sBAAc,UAAd;AACA,qBAAa,aAAa,UAA1B;AACH;AACD,YAAQ,GAAR,CAAY,MAAZ;AACA,WAAO,MAAP;AACH;;AAED;AACA;AACA,QAAQ,KAAR","file":"13-compiled.js","sourcesContent":["// Bonfire: Sum All Odd Fibonacci Numbers\n// Return the sum of all odd Fibonacci numbers up to and including the passed number if it is a Fibonacci number.\n\n// The first few numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8, and each subsequent number is the sum of the previous two numbers.\n\n// As an example, passing 4 to the function should return 5 because all the odd Fibonacci numbers under 4 are 1, 1, and 3.\n\n// Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\n\n// Here are some helpful links:\n\n// Remainder\n//   Run tests (ctrl + enter)\n//   Reset\t  Help\t  Bug\n\n// /**\n//   * Your output will go here.\n//   * Console.log() -type statements\n//   * will appear in your browser's\n//   * DevTools JavaScript console.\n//   */\n\n// sumFibs(1) should return a number.\n// sumFibs(1000) should return 1785.\n// sumFibs(4000000) should return 4613732.\n// sumFibs(4) should return 5.\n// sumFibs(75024) should return 60696.\n// sumFibs(75025) should return 135721.\n\n\n\nfunction sumFibs(num) {\n var prevNumber = 0;\n    var currNumber = 1;\n    var result = 0;\n    while (currNumber <= num) {\n        if (currNumber % 2 !== 0) {\n            result += currNumber;\n        }\n\n        currNumber += prevNumber;\n        prevNumber = currNumber - prevNumber;\n    }\n    console.log(result);\n    return result;\n}\n\n//sumFibs(4);\n//sumFibs(4000000);\nsumFibs(75024);\n"]}