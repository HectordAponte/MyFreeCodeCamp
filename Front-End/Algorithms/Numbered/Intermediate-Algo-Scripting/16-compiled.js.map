{"version":3,"sources":["16.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,IAAT,CAAc,GAAd,EAAmB,IAAnB,EAAyB;AACvB,MAAI,SAAS,IAAI,MAAJ,CAAW,IAAX,CAAb;AACA,MAAI,MAAM,OAAO,CAAP,CAAV;AACA,SAAO,GAAP;AACD;;AAED,QAAQ,GAAR,CAAY,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,CAAL,EAA0B,UAAS,GAAT,EAAc;AAAE,SAAO,MAAM,CAAN,KAAY,CAAnB;AAAuB,CAAjE,CAAZ;AACA","file":"16-compiled.js","sourcesContent":["// Bonfire: Finders Keepers\r\n// Create a function that looks through an array (first argument) and returns the first element in the array that passes a truth test (second argument).\r\n\r\n// Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\r\n\r\n// Here are some helpful links:\r\n\r\n// Array.filter()\r\n//   Run tests (ctrl + enter)\r\n//   Reset\t  Help\t  Bug\r\n\r\n// /**\r\n//   * Your output will go here.\r\n//   * Console.log() -type statements\r\n//   * will appear in your browser's\r\n//   * DevTools JavaScript console.\r\n//   */\r\n\r\n// find([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; }) should return 8.\r\n// find([1, 3, 5, 9], function(num) { return num % 2 === 0; }) should return undefined.\r\n\r\nfunction find(arr, func) {\r\n  var result = arr.filter(func);\r\n  var num = result[0];\r\n  return num;\r\n}\r\n\r\nconsole.log(find([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; }) );\r\n//console.log(find([1, 2, 3, 4], function(num){ return num % 2 === 0; }));"]}