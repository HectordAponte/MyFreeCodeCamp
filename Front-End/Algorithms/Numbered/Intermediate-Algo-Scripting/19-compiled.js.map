{"version":3,"sources":["19.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,SAAS,WAAT,CAAqB,GAArB,EAA0B;AACzB,KAAI,OAAO,EAAX;AACA,KAAI,WAAW,IAAI,KAAJ,CAAU,GAAV,CAAf;AACA,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,SAAS,MAA5B,EAAoC,GAApC,EAAyC;AACxC,OAAK,IAAL,CAAU,SAAS,SAAS,CAAT,CAAT,EAAsB,CAAtB,CAAV;AACA;AACD,SAAQ,GAAR,CAAY,IAAZ;AACA,SAAQ,GAAR,CAAY,OAAO,YAAP,eAAuB,IAAvB,CAAZ;AACC,QAAO,OAAO,YAAP,eAAuB,IAAvB,CAAP;AACD;;AAED,YAAY,8LAAZ","file":"19-compiled.js","sourcesContent":["// Bonfire: Binary Agents\r\n// Return an English translated sentence of the passed binary string.\r\n\r\n// The binary string will be space separated.\r\n\r\n// Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\r\n\r\n// Here are some helpful links:\r\n\r\n// String.charCodeAt()\r\n// String.fromCharCode()\r\n//   Run tests (ctrl + enter)\r\n//   Reset\t  Help\t  Bug\r\n\r\n// *\r\n//   * Your output will go here.\r\n//   * Console.log() -type statements\r\n//   * will appear in your browser's\r\n//   * DevTools JavaScript console.\r\n  \r\n\r\n// binaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\") should return \"Aren't bonfires fun!?\"\r\n// binaryAgent(\"01001001 00100000 01101100 01101111 01110110 01100101 00100000 01000110 01110010 01100101 01100101 01000011 01101111 01100100 01100101 01000011 01100001 01101101 01110000 00100001\") should return \"I love FreeCodeCamp!\"\r\n\r\nfunction binaryAgent(str) {\r\n\tvar nums = [];\r\n\tvar binaries = str.split(\" \");\r\n\tfor(var i = 0; i < binaries.length; i++) {\r\n\t\tnums.push(parseInt(binaries[i], 2));\r\n\t}\r\n\tconsole.log(nums);\r\n\tconsole.log(String.fromCharCode(...nums));\r\n  return String.fromCharCode(...nums);\r\n}\r\n\r\nbinaryAgent(\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\");\r\n"]}