{"version":3,"sources":["21.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS,GAAT,GAAe;AACd,QAAG,UAAU,MAAV,KAAqB,CAAxB,EAA2B;AAC1B;;AAEM,YAAG,OAAO,UAAU,CAAV,CAAP,KAAwB,QAAxB,IAAoC,OAAO,UAAU,CAAV,CAAP,KAAwB,QAA/D,EAAyE;AAC9E,mBAAO,SAAP;AACA,SAFK,MAGD;AACJ,mBAAO,UAAU,CAAV,IAAe,UAAU,CAAV,CAAtB;AACA;AACD,KATD,MAUK;AACE,YAAI,OAAO,UAAU,CAAV,CAAX;AACA,YAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC1B,mBAAO,SAAP;AACH,SAFD,MAGK;AACD,mBAAO,UAAS,GAAT,EAAc;AACjB,oBAAG,OAAO,GAAP,KAAe,QAAlB,EAA4B;AACxB,2BAAO,SAAP;AACH;;AAGG,uBAAO,OAAO,GAAd;AAEP,aARD;AASJ;AACN;AACA,WAAO,KAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA,QAAQ,GAAR,CAAY,IAAI,CAAJ,EAAO,CAAC,CAAD,CAAP,CAAZ","file":"21-compiled.js","sourcesContent":["// Bonfire: Arguments Optional\n// Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.\n\n// For example, add(2, 3) should return 5, and add(2) should return a function.\n\n// Calling this returned function with a single argument will then return the sum:\n\n// var sumTwoAnd = add(2);\n\n// sumTwoAnd(3) returns 5.\n\n// If either argument isn't a valid number, return undefined.\n\n// Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\n\n// Here are some helpful links:\n\n// Closures\n// Arguments object\n//   Run tests (ctrl + enter)\n//   Reset\t  Help\t  Bug\n\n// /**\n//   * Your output will go here.\n//   * Console.log() -type statements\n//   * will appear in your browser's\n//   * DevTools JavaScript console.\n//   */\n\n// add(2, 3) should return 5.\n// add(2)(3) should return 5.\n// add(\"http://bit.ly/IqT6zt\") should return undefined.\n// add(2, \"3\") should return undefined.\n// add(2)([3]) should return undefined.\n\nfunction add() {\n\tif(arguments.length === 2) {\n\t\t//if(Number.isNaN(arguments[0]) || Number.isNaN(arguments[1]))\n        \n        if(typeof arguments[0] !== \"number\" || typeof arguments[1] !== \"number\") {\n\t\t\treturn undefined;\n\t\t}\n\t\telse {\n\t\t\treturn arguments[0] + arguments[1];\n\t\t}\n\t}\n\telse {\n        var num1 = arguments[0];\n        if (typeof num1 !== \"number\") {\n            return undefined;\n        }\n        else {\n            return function(num) {\n                if(typeof num !== \"number\") {\n                    return undefined;\n                }\n                \n                  \n                    return num1 + num;\n                \n            };\n       }\n\t}\n  return false;\n}\n\n//console.log(add(2,3));\n//console.log(add(2)(3));\n//console.log(add(2, \"3\"));\n//console.log(add(\"http://bit.ly/IqT6zt\"));\n//console.log(add(2, \"3\"));\nconsole.log(add(2)([3]));"]}