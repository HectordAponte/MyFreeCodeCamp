{"version":3,"sources":["3.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;AAwBC;;AAEA,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACrB,MAAI,WAAW,CAAE,IAAF,EAAQ,GAAR,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,CAArD,CAAf;AACE,MAAI,SAAS,CAAE,GAAF,EAAO,IAAP,EAAa,GAAb,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,IAA7B,EAAmC,GAAnC,EAAwC,IAAxC,EAA8C,GAA9C,EAAmD,IAAnD,EAAyD,GAAzD,EAA8D,IAA9D,EAAoE,GAApE,CAAb;AACA,MAAI,SAAS,EAAb;AACA,OAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,SAAS,MAA5B,EAAoC,GAApC,EAAyC;AACxC,WAAM,SAAS,CAAT,KAAe,GAArB,EAA0B;AACzB,gBAAU,OAAO,CAAP,CAAV;AACA,aAAO,SAAS,CAAT,CAAP;AAEA;AACD;AACD,UAAQ,GAAR,CAAY,MAAZ;AACH,SAAO,MAAP;AACA;;AAEA,QAAQ,IAAR","file":"3-compiled.js","sourcesContent":["/*Bonfire: Roman Numeral Converter\r\nConvert the given number into a roman numeral.\r\n\r\nAll roman numerals answers should be provided in upper-case.\r\n\r\nRemember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\r\n\r\nHere are some helpful links:\r\n\r\nRoman Numerals\r\nArray.splice()\r\nArray.indexOf()\r\nArray.join()\r\n  Run tests (ctrl + enter)\r\n  Reset\t  Help\t  Bug\r\n\r\n/**\r\n  * Your output will go here.\r\n  * Console.log() -type statements\r\n  * will appear in your browser's\r\n  * DevTools JavaScript console.\r\n  */\r\n/*\r\nconvert(5) should return \"V\".\r\nconvert(9) should return \"IX\".\r\nconvert(12) should return \"XII\".\r\nconvert(16) should return \"XVI\".\r\nconvert(29) should return \"XXIX\".\r\nconvert(44) should return \"XLIV\".\r\nconvert(45) should return \"XLV\"\r\nconvert(68) should return \"LXVIII\"\r\nconvert(83) should return \"LXXXIII\"\r\nconvert(97) should return \"XCVII\"\r\nconvert(99) should return \"XCIX\"\r\nconvert(500) should return \"D\"\r\nconvert(501) should return \"DI\"\r\nconvert(649) should return \"DCXLIX\"\r\nconvert(798) should return \"DCCXCVIII\"\r\nconvert(891) should return \"DCCCXCI\"\r\nconvert(1000) should return \"M\"\r\nconvert(1004) should return \"MIV\"\r\nconvert(1006) should return \"MVI\"\r\nconvert(1023) should return \"MXXIII\"\r\nconvert(2014) should return \"MMXIV\"\r\nconvert(3999) should return \"MMMCMXCIX\"*/\r\n\r\n // Create arrays with default conversion with matching indices.\r\n\r\n function convert(num) {\r\n \tvar decimals = [ 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 ];\r\n    var romans = [ 'M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I' ];\r\n    var result = '';\r\n    for(var i = 0; i < decimals.length; i++) {\r\n    \twhile(decimals[i] <= num) {\r\n    \t\tresult += romans[i];\r\n    \t\tnum -= decimals[i];\r\n\r\n    \t}\r\n    }\r\n    console.log(result);\r\n\treturn result;\r\n}\r\n\r\n convert(3999);\r\n"]}