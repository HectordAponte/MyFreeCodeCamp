{"version":3,"sources":["7.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;AAOA;AACA;AACA;;AAEA,SAAS,IAAT,CAAc,GAAd,EAAmB;AAClB,KAAI,QAAQ,CAAC,GAAD,EAAM,GAAN,CAAZ;AACA,KAAI,QAAQ,CAAC,GAAD,EAAM,GAAN,CAAZ;AACA,KAAI,SAAS,IAAI,KAAJ,CAAU,EAAV,CAAb;AACA,KAAI,SAAS,EAAb;AACA,MAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,OAAO,MAA1B,EAAkC,GAAlC,EAAuC;AACtC,MAAI,MAAM,EAAV;AACA,MAAI,IAAJ,CAAS,OAAO,CAAP,CAAT;AACA,MAAG,MAAM,CAAN,MAAa,OAAO,CAAP,CAAhB,EAA2B;AAC1B,OAAI,IAAJ,CAAS,MAAM,CAAN,CAAT;AACA,GAFD,MAGK,IAAG,MAAM,CAAN,MAAa,OAAO,CAAP,CAAhB,EAA2B;AAC/B,OAAI,IAAJ,CAAS,MAAM,CAAN,CAAT;AACA,GAFI,MAIA,IAAG,MAAM,CAAN,MAAa,OAAO,CAAP,CAAhB,EAA2B;AAC/B,OAAI,IAAJ,CAAS,MAAM,CAAN,CAAT;AACA,GAFI,MAGA,IAAG,MAAM,CAAN,MAAa,OAAO,CAAP,CAAhB,EAA2B;AAC/B,OAAI,IAAJ,CAAS,MAAM,CAAN,CAAT;AACA;AACD,SAAO,IAAP,CAAY,GAAZ;AAEA;AACD,SAAQ,GAAR,CAAY,MAAZ;AACA,QAAO,MAAP;AACA;;AAED,KAAK,KAAL","file":"7-compiled.js","sourcesContent":["/*Bonfire: DNA Pairing\r\nThe DNA strand is missing the pairing element. Take each character, get its pair, and return the results as a 2d array.\r\n\r\nBase pairs are a pair of AT and CG. Match the missing element to the provided character.\r\n\r\nReturn the provided character as the first element in each array.\r\n\r\nFor example, for the input GCG, return [[\"G\", \"C\"], [\"C\",\"G\"],[\"G\", \"C\"]]\r\n\r\nThe character and its pair are paired up in an array, and all the arrays are grouped into one encapsulating array.\r\n\r\nRemember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.\r\n\r\nHere are some helpful links:\r\n\r\nArray.push()\r\nString.split()\r\n  Run tests (ctrl + enter)\r\n  Reset\t  Help\t  Bug*/\r\n\r\n/**\r\n  * Your output will go here.\r\n  * Console.log() -type statements\r\n  * will appear in your browser's\r\n  * DevTools JavaScript console.\r\n  */\r\n\r\n// pair(\"ATCGA\") should return [[\"A\",\"T\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"G\",\"C\"],[\"A\",\"T\"]].\r\n// pair(\"TTGAG\") should return [[\"T\",\"A\"],[\"T\",\"A\"],[\"G\",\"C\"],[\"A\",\"T\"],[\"G\",\"C\"]].\r\n// pair(\"CTCTA\") should return [[\"C\",\"G\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"T\",\"A\"],[\"A\",\"T\"]].\r\n\r\nfunction pair(str) {\r\n\tvar pair1 = [\"A\", \"T\"];\r\n\tvar pair2 = [\"C\", \"G\"];\r\n\tvar toPair = str.split(\"\");\r\n\tvar result = [];\r\n\tfor(var i = 0; i < toPair.length; i++) {\r\n\t\tvar arr = [];\r\n\t\tarr.push(toPair[i]);\r\n\t\tif(pair1[0] === toPair[i]) {\r\n\t\t\tarr.push(pair1[1]);\r\n\t\t}\r\n\t\telse if(pair1[1] === toPair[i]) {\r\n\t\t\tarr.push(pair1[0]);\r\n\t\t}\r\n\r\n\t\telse if(pair2[0] === toPair[i]) {\r\n\t\t\tarr.push(pair2[1]);\r\n\t\t}\r\n\t\telse if(pair2[1] === toPair[i]) {\r\n\t\t\tarr.push(pair2[0]);\r\n\t\t}\r\n\t\tresult.push(arr);\r\n\r\n\t}\t\r\n\tconsole.log(result);\r\n return result;\r\n}\r\n\r\npair(\"GCG\");\r\n"]}