{"version":3,"sources":["7.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,IAAI,QAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAZ;;AAEA;;AAEA,IAAI,YAAY,MAAM,MAAN,CAAa,UAAS,IAAT,EAAc,GAAd,EAAkB;AAAC,SAAQ,OAAO,GAAf;AAAqB,CAArD,EAAsD,CAAtD,CAAhB;;AAEA;;AAEA,CAAC,YAAW;AAAC,SAAO,SAAP;AAAkB,CAA/B","file":"7-compiled.js","sourcesContent":["/*Waypoint: Condense arrays with reduce\r\nThe array method reduce is used to iterate through an array and condense it into one value.\r\n\r\nTo use reduce you pass in a callback whose arguments are an accumulator (in this case, previousVal) and the current value (currentVal).\r\n\r\nreduce has an optional second argument which can be used to set the initial value of the accumulator. If no initial value is specified it will be the first array element and currentVal will start with the second array element.\r\n\r\nHere is an example of reduce being used to subtract all the values of an array:\r\n\r\nvar singleVal = array.reduce(function(previousVal, currentVal) {\r\n\r\n  return previousVal - currentVal;\r\n\r\n}, 0);\r\n\r\nUse the reduce method to sum all the values in array and assign it to singleVal.*/\r\n\r\nvar array = [4,5,6,7,8];\r\n\r\n// Only change code below this line.\r\n\r\nvar singleVal = array.reduce(function(prev,cur){return (prev + cur);},0);\r\n\r\n// Only change code above this line.\r\n\r\n(function() {return singleVal;})();\r\n"]}