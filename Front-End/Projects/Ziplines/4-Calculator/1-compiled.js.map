{"version":3,"sources":["1.js"],"names":[],"mappings":"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","file":"1-compiled.js","sourcesContent":["//global variables and functions\nvar $display = $(\"#calculator-display\");\nvar result = 0;\nvar entries = [];\nvar lastNum = 0;\nvar currentNum = 0;\nvar currentNumDisplay = \"\";\nvar currentOp = '';\nvar periodicNumber = [];\nvar decimals = [];\n\n\nfunction calculate(num1, op, num2) {\n    var result,temp = 0;\n    if (op === \"+\") {\n        result = num1 + num2;\n    } \n\n    else if (op === \"-\") {\n        result = num1 - num2;\n    } \n\n    else if (op === \"*\") {\n        result = num1 * num2;\n    } \n\n    else if (op === \"/\") {\n        temp = num1 / num2;\n        if(temp % 1 !== 0) {\n            result = temp.toFixed(10);\n        }\n        else {\n            result = temp;\n        }\n    } \n\n    else if (op === \"sqrt\") {\n        if (num1 >= 0) {\n            temp = Math.sqrt(num1);\n            if (temp % 1 != 0) {\n                //number has decimals\n                result = temp.toFixed(10);\n            } else {\n                result = temp;\n            }\n        } else {\n            result = 0;\n        }\n    }\n\n    else if(op === \"%\") {\n        result = num1 % num2;\n    }\n\n    return result;\n}\n\n$(\".table-cell\").click(function () {\n    //$display.html($(this).text());\n    var $this = $(this);\n\n    //if button clicked was a number\n    if ($this.hasClass(\"number\")) {\n        currentNum = parseInt($this.text(), 10);\n        \n        //check if last entry in entries[] is also a number\n        if ($.isNumeric(entries[entries.length - 1])) {\n            //remove last number from entries\n            lastNum = entries.pop();\n\n\n            //get last entry in entries, combine with this number, update currentNum, currentNumDisplay and display on screen\n            currentNumDisplay = lastNum.toString() + currentNum;\n            currentNum = parseInt(currentNumDisplay, 10);\n            entries.push(currentNum);\n            console.log(\"----\");\n            console.log(\"Entries = \" + entries);\n            console.log(\"----\");\n            $display.html(currentNumDisplay);\n\n\n        } else {\n            //if last entry in entries[] is not a number, it must be an operator\n            entries.push(currentNum);\n            console.log(\"----\");\n            console.log(\"Entries = \" + entries);\n            console.log(\"----\");\n            $display.html(currentNum);\n        }\n    }\n\n    //else if button clicked was an operator\n    else if ($this.hasClass(\"op\")) {\n\n        currentOp = $this.text();\n        console.log(\"Current Op => \" + currentOp);\n\n        /*----------------------------------------------------\n        check if the operator was a null operator AC|CE|=\n        -----------------------------------------------------*/\n        if ($this.hasClass(\"null-op\")) {\n\n            //check if operator was an 'AC'\n            if (currentOp === \"AC\") {\n                //console.log(\"Inside if loop, Current Op = \" + currentOp);\n                //clear entries array\n                entries = [];\n                console.log(\"----\");\n                console.log(\"Entries = \" + entries);\n                console.log(\"----\");\n                //clear screen display\n                $display.html(\"\");\n                //clear currentNum, currentOp\n                currentNum = 0;\n                currentOp = '';\n            }\n\n\n            //check if operator was a 'CE' \n            else if (currentOp === \"CE\") {\n                //if last entry in entries is a number\n                if ($.isNumeric(entries[entries.length - 1])) {\n                    //remove last number from entries\n                    entries.pop();\n                    //also remove last operator from entries\n                    entries.pop();\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //reset currentOp,currentNum\n                    currentNum = 0;\n                    currentOp = '';\n                }\n                //if last entry in entries was not a number\n                else {\n                    //last entry is an operator, remove it\n                    entries.pop();\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");                    \n                    //reset currentOp,currentNum\n                    currentNum = 0;\n                    currentOp = '';\n\n                }\n            }\n\n            //check if operator was an '='\n            else if (currentOp === \"=\") {\n                //calculate result from entries\n                var temp = 0;\n                while(entries.length >= 3) {\n                    temp = calculate(entries[0], entries[1], entries[2]);\n                    entries.splice(0, 3, temp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");                    \n                }\n                result = temp;\n                $display.html(result);\n                //reset entries & current op\n                currentOp = '';\n                entries = [];\n                console.log(\"Entries = \" + entries);\n\n            }\n        }\n\n\n        /*----------------------------------------------------\n          check if operator was a unary operator SQRT|.\n        -----------------------------------------------------*/\n        else if ($this.hasClass(\"unary-op\")) {\n\n            //check if operator was a sqrt\n            if ($this.hasClass(\"sqrt\")) {\n                //check if last entry in entries was a number\n                if ($.isNumeric(entries[entries.length - 1])) {\n                    //if yes, get last number in entries\n                    lastNum = entries[entries.length - 1];\n                    //compute result of square root\n                    result = calculate(lastNum, \"sqrt\", 0);\n                    //show result on screen\n                    $display.html(result);\n                    //reset everything\n                    entries = [];\n                    currentOp = '';\n                }\n\n                //if last entry was not a number\n                else {\n                    //discard the value of sqrt\n                    currentOp = '';\n                }\n            }\n\n            //check if operator was a dot\n            else if ($this.hasClass(\"dot\")) {\n                //check if last entry in entries was a number\n                if ($.isNumeric(entries[entries.length - 1])) {\n                    //if yes, get last number in entries and remove it from entries\n                    lastNum = entries.pop();\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");   \n                    //format lastnum with . as string\n                    currentNumDisplay = lastNum.toFixed(0);\n                    console.log(\"Current => \" + currentNumDisplay);\n                    //display it on screen\n                    $display.html(currentNumDisplay);\n                    decimals = [];\n                    entries.push(\".\");\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");                    \n\n                }\n\n                //if last entry in entries is a dot\n                else if(entries[entries.length-1] === \".\") {\n                    //format number as zero then dot\n                    currentNum = parseInt($this.text(), 10);\n\n                    currentNumDisplay = lastNum + \".\" + currentNum;\n                    currentNum = parseFloat(currentNumDisplay);\n                    $display.html(currentNumDisplay);\n                    //adjust entries - remove \".\" and add decimal num\n                    entries.pop();\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    entries.push(currentNum);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");                    \n\n                }\n\n            }\n        }\n\n        /*---------------------------------------------------------\n          check if the operator was a binary operator - +|-|*|/|%\n        ---------------------------------------------------------*/\n        else if ($this.hasClass(\"binary-op\")) {\n            //check if last entry in entries is a number\n            if ($.isNumeric(entries[entries.length - 1])) {\n                //get what operator was pushed\n                if($this.is(\"#add\")) {\n                    //if operator is +\n                    currentOp = '+';\n                    entries.push(currentOp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //clear currentOp\n                    currentOp = '';\n                }\n\n                //if operator is '-' \n                else if($this.is(\"#subtract\")) {\n                    //if operator is +\n                    currentOp = '-';\n                    entries.push(currentOp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //clear currentOp\n                    currentOp = '';\n                }\n\n                //if operator is '*'\n                else if($this.is(\"#multiply\")) {\n                    //if operator is +\n                    currentOp = '*';\n                    entries.push(currentOp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //clear currentOp\n                    currentOp = '';\n                }\n\n                //if operator is '/'\n                else if($this.is(\"#divide\")) {\n                    //if operator is +\n                    currentOp = '/';\n                    entries.push(currentOp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //clear currentOp\n                    currentOp = '';\n                }\n                else if($this.is(\"#percent\")) {\n                    //if operator is +\n                    currentOp = '%';\n                    entries.push(currentOp);\n                    console.log(\"----\");\n                    console.log(\"Entries = \" + entries);\n                    console.log(\"----\");\n                    //clear currentOp\n                    currentOp = '';\n                }\n\n\n            }\n\n        }\n    }\n\n\n\n\n\n\n\n\n\n});\n"]}